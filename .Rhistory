library(dplyr)
library(suicide_rate)
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(population)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(population)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(population)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
)
2
install.packages('rsconnect')
rsconnect::setAccountInfo(name='info201af',
token='4D8181584ABE0CD7C38BA2523DF7F4DC',
secret='<SECRET>')
rsconnect::setAccountInfo(name='info201af',
token='4D8181584ABE0CD7C38BA2523DF7F4DC',
secret='<SECRET>')
rsconnect::setAccountInfo(name='info201af',
token='4D8181584ABE0CD7C38BA2523DF7F4DC',
secret='<SECRET>')
Sys.setlocale(locale="en_US.UTF-8")
Sys.setlocale(locale="en_US.UTF-8")
rsconnect::setAccountInfo(name='info201af', token='4D8181584ABE0CD7C38BA2523DF7F4DC', secret='94GbXxdyBiz+jQjWuXds81Y+FWUkBSrtz/p+jYB6')
rsconnect::setAccountInfo(name='info201af', token='4D8181584ABE0CD7C38BA2523DF7F4DC', secret='94GbXxdyBiz+jQjWuXds81Y+FWUkBSrtz/p+jYB6')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
library(rsconnect)
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(population)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
library(rsconnect)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
read.csv(./info/data/"suicide_rate")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
df <- read.csv(./info/data/"suicide_rate")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gender", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
library(rsconnect)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("population", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
library(rsconnect)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
install.packages("shiny")
runGist(9737637)
run()
run()
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
library(rsconnect)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
run()
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
library(rsconnect)
suicide_rate <- read.csv(file="C:\Users\wfeng98\Desktop\info\R-project-group\data\suicide_rate.csv", sep=",")
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("population", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
library(shiny)
library(plotly)
library(dplyr)
library(shiny)
library(rsconnect)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(suicide_rate)
# Define a server for the Shiny app
function(input, output) {
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(suicide_rate[,input$population],
main=input$population,
ylab="Number of Telephones",
xlab="Year")
})
}
library(shiny)
library(plotly)
library(dplyr)
library(suicide_rate)
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("population", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
source('C:/Users/wfeng98/Desktop/info/R-project-group/ui.R', echo=TRUE)
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
library(shiny)
library(plotly)
library(dplyr)
library(rsconnect)
suicide_rate <- read.csv("/data/suicide_rate.csv/")
#Sys.setlocale(locale="en_US.UTF-8")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("population", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
runApp('C:/Users/wfeng98/Desktop/info/R-project-group')
suicide_rate <- read.csv("./data/suicide_rate.csv")
getwd
getwd()
setwd("C:/Users/wfeng98/Desktop/info/R-project-group")
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Telephones by region"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("population", "Gender:",
choices=colnames(suicide_rate)),
hr(),
helpText("Data from AT&T (1961) The World's Telephones.")
),
# Create a spot for the barplot
mainPanel(
plotOutput("phonePlot")
)
)
)
getwd()
runApp()
install.packages("ggplot2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
